---
title: "final_graphs"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library(tidyverse)
atb <- read_csv("clean_data_challenge.csv")
#create a new dataset where rows are removed 
atb_noskip <- atb %>%
  filter(adult_volunteer != "Skip")


```

# INCOME & VOLUNTEER

```{r}
custom_order <- c("$0 to $10,000", "$10,001 to $20,000", "$20,001 to $30,000", "$30,001 to $40,000", "$40,001 to $50,000", "$50,001 to $60,000", "$60,001 to $75,000", "$75,001 to $100,000", "$100,001 to $150,000", "$150,001 to $200,000", "$200,001 to $250,000", "$250,001 or more")

atb_noskip$adult_volunteer <- factor(atb_noskip$adult_volunteer, levels = c("Yes", "No"))

facet_labels <- c("Yes" = "Adult has volunteered this school-year", "No" = "Adult has NOT volunteered this school-year")

p <- atb_noskip %>%
  mutate(total_income = factor(total_income, levels = custom_order),) %>%
  ggplot() +
  geom_bar(show.legend = FALSE,
           mapping = aes(x = total_income,
                         y = after_stat(prop), group=1), fill = "steelblue") +
  facet_wrap(~adult_volunteer, 
             labeller = labeller(adult_volunteer = facet_labels)) +
  coord_flip() +
  labs(x = "Total Household Income", y = "Proportion",
       title = "Household income may be a barrier to volunteering") +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = NA),
    # White panel background
    plot.background = element_rect(fill = "white", color = NA),
    # White overall plot background
    text = element_text(size = 12),          # Global font size
  axis.title = element_text(size = 16),    # X & Y axis labels
  axis.text = element_text(size = 12),     # X & Y tick labels
  legend.title = element_text(size = 14),  # Legend title
  legend.text = element_text(size = 14),   # Legend labels
  plot.title = element_text(size = 16, face = "bold"),  # Title
  plot.subtitle = element_text(size = 12),
  strip.text = element_text(size = 10.5)
  ) 

#There is a higher proportion of lower income families among those who do not volunteer
p
ggsave("income_volunteer_graph_final.png", plot = p, device = "png", width = 8, height = 6, dpi = 300)
```

# MARITAL & VOLUNTEER

```{r}
custom_order <- c("Divorced", "Never married", "Separated", "Widowed", "Now married")


d <- atb %>%
  filter(first_guardian_marital != "Skip") %>%
  filter(adult_volunteer != "Skip") |> 
  mutate(first_guardian_marital = factor(first_guardian_marital, levels = custom_order)) %>%
  # group_by(adult_volunteer) |> 
  # count(first_guardian_marital) |> 
  # mutate(prop_marital = n/sum(n)) |> 
  ggplot() +
  geom_bar(aes(y = adult_volunteer, fill = first_guardian_marital), position = "fill", width = 0.5) +
  labs(
    x = "Proportion",
    y = "Whether Or Not Guardians Volunteer",
    fill = "First Guardian Marital Status",
    title = "Guardians that are currently married tend to volunteer more",
    subtitle = "Guardians that are divorced tend to volunteer less"
  ) +
  scale_fill_viridis_d(guide = guide_legend(reverse = TRUE)) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10),  # Adjust size of y-axis text
    axis.text.x = element_text(size = 10),  # Adjust size of x-axis text
    plot.margin = margin(8, 8, 8, 8)  # Adjust plot margins if needed
  ) +
  theme(
    aspect.ratio = 1/2,
    legend.position = "bottom",
    panel.spacing = unit(0, "lines"),
    text = element_text(size = 12),          # Global font size
  axis.title = element_text(size = 16),    # X & Y axis labels
  axis.text = element_text(size = 12),     # X & Y tick labels
  legend.title = element_text(size = 14),  # Legend title
  legend.text = element_text(size = 14),   # Legend labels
  plot.title = element_text(size = 16, face = "bold"),  # Title
  plot.subtitle = element_text(size = 12),
  strip.text = element_text(size = 10.5)
  ) +
  scale_y_discrete(expand = c(0, 0)) # Remove extra space on y-axis for categorical data 


d
ggsave("divorce_volunteer_final.png", plot = d, device = "png")
```

# EAT & HW HELP

```{r}
custom_order <- c("None", "One day", "Two days", "Three days", "Four days", "Five days", "Six days", "Seven days")

custom_order2 <- c("Skip", "Never", "Less than once", "1-2 days", "3-4 days", "5+ days")

facet_label <- c("None" = "Never Eat Together",
                 "One day" = "Eat Together One Day Of The Week",
                 "Two days" = "Eat Together Two Days Of The Week",
                 "Three days" = "Eat Together Three Days Of The Week",
                 "Four days" = "Eat Together Four Days Of The Week",
                 "Five days" = "Eat Together Five Days Of The Week",
                 "Six days" = "Eat Together Six Days Of The Week",
                 "Seven days" = "Eat Together Seven Days Of The Week")

  

e<-atb %>%
  filter(eat_together != "Skip") %>%
  filter(hmwk_help != "Skip") |> 
  mutate(eat_together = factor(eat_together, levels = custom_order)) %>%
  mutate(hmwk_help = factor(hmwk_help, levels = custom_order2)) |> 
  group_by(eat_together) |> 
  count(hmwk_help) |> 
  mutate(prop_hmwk_help = n/sum(n)) |> 
  mutate(never = case_when(
    hmwk_help == "Never" ~ "yes",
    hmwk_help == "5+ days" ~ "yesyes",
    TRUE ~ "no"
  )) |> 
  ggplot() +
  geom_col(mapping = aes(x = prop_hmwk_help, y = hmwk_help, fill = never)) +
  scale_fill_viridis_d() +
  facet_wrap(~eat_together, labeller = labeller(eat_together = facet_label), ncol = 1) +
  labs(
     x = "Proportion",
     y = "How often families help their children with homework per week",
     title = "Families that eat together 7 days per week \ntend to help their children with homework more than others"
   ) +
  theme(legend.position = "none",
        text = element_text(size = 12),          # Global font size
  axis.title = element_text(size = 16),    # X & Y axis labels
  axis.text = element_text(size = 12),     # X & Y tick labels
  legend.title = element_text(size = 14),  # Legend title
  legend.text = element_text(size = 14),   # Legend labels
  plot.title = element_text(size = 16, face = "bold"),  # Title
  plot.subtitle = element_text(size = 12),
  strip.text = element_text(size = 10.5)) +
  theme_minimal() +
  theme(legend.position = "none")
e
ggsave("eat_final.png", plot = e, device = "png")
```
